version: '3.8'

services:
  catalog-db:
    image: postgres:latest
    container_name: catalog-db
    environment:
      POSTGRES_USER: ${CATALOG_DB_USER}
      POSTGRES_PASSWORD: ${CATALOG_DB_PASS}
      POSTGRES_DB: ${CATALOG_DB_NAME}
    ports:
      - "${CATALOG_DB_EXTERNAL_PORT}:5432"
    volumes:
      - catalogdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CATALOG_DB_USER} -d ${CATALOG_DB_NAME}"]
      interval: 10s
      retries: 5
    profiles:
      - data
      - catalog

  basket-db:
    image: mongo:latest
    container_name: basket-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${BASKET_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${BASKET_DB_PASS}
      MONGO_INITDB_DATABASE: ${BASKET_DB_NAME}
    ports:
      - "${BASKET_DB_EXTERNAL_PORT}:27017"
    volumes:
      - basketdata:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 3
    profiles:
      - data
      - basket

  identity-db:
    image: postgres:latest
    container_name: identity-db
    environment:
      POSTGRES_USER: ${IDENTITY_DB_USER}
      POSTGRES_PASSWORD: ${IDENTITY_DB_PASS}
      POSTGRES_DB: ${IDENTITY_DB_NAME}
    ports:
      - "${IDENTITY_DB_EXTERNAL_PORT}:5432"
    volumes:
      - identitydata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${IDENTITY_DB_USER} -d ${IDENTITY_DB_NAME}"]
      interval: 10s
      retries: 5
    profiles:
      - data
      - identity


  
  inventory-db:
    image: mongo:latest
    container_name: inventory-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${INVENTORY_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${INVENTORY_DB_PASS}
      MONGO_INITDB_DATABASE: ${INVENTORY_DB_NAME}
    ports:
      - "${INVENTORY_DB_EXTERNAL_PORT}:27017"
    volumes:
      - inventorydata:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 3
    profiles:
      - data
      - inventory

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${EVENT_USER}
      RABBITMQ_DEFAULT_PASS: ${EVENT_PASS}
    ports:
      - "5672:5672" # RabbitMQ port for communication with applications
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq/mnesia
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
    profiles:
      - events
      - data
      - catalog

  catalog-api:
    build:
      context: .
      dockerfile: Catalog.API/Dockerfile
    container_name: catalog-api
    environment:
      DB_HOST: ${CATALOG_DB_HOST}
      DB_PORT: ${CATALOG_DB_EXTERNAL_PORT}
      DB_NAME: ${CATALOG_DB_NAME}
      DB_USER: ${CATALOG_DB_USER}
      DB_PASS: ${CATALOG_DB_PASS}
      EVENT_HOST: ${EVENT_HOST}
      EVENT_PORT: ${EVENT_EXTERNAL_API_PORT}
      EVENT_USER: ${EVENT_USER}
      EVENT_PASS: ${EVENT_PASS}
    ports:
      - "8090:8080"
    depends_on:
      catalog-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    profiles:
      - apis
      - catalog

  basket-api:
    build:
      context: .
      dockerfile: Basket.API/Dockerfile
    container_name: basket-api
    
    environment:
      DB_HOST: ${BASKET_DB_HOST}
      DB_PORT: ${BASKET_DB_EXTERNAL_PORT}
      DB_USER: ${BASKET_DB_USER}
      DB_PASS: ${BASKET_DB_PASS}
      DB_NAME: ${BASKET_DB_NAME}
      EVENT_HOST: ${EVENT_HOST}
      EVENT_PORT: ${EVENT_EXTERNAL_API_PORT}
      EVENT_USER: ${EVENT_USER}
      EVENT_PASS: ${EVENT_PASS}
    ports:
      - "9090:8080"
    depends_on:
      basket-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    profiles:
      - apis
      - basket
  
  inventory-api:
    build:
      context: .
      dockerfile: Inventory.API/Dockerfile
    container_name: inventory-api
    environment:
      DB_HOST: ${INVENTORY_DB_HOST}
      DB_PORT: ${INVENTORY_DB_EXTERNAL_PORT}
      DB_USER: ${INVENTORY_DB_USER}
      DB_PASS: ${INVENTORY_DB_PASS}
      DB_NAME: ${INVENTORY_DB_NAME}
      EVENT_HOST: ${EVENT_HOST}
      EVENT_PORT: ${EVENT_EXTERNAL_API_PORT}
      EVENT_USER: ${EVENT_USER}
      EVENT_PASS: ${EVENT_PASS}
    ports:
      - "9091:8080"
    depends_on:
      inventory-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    profiles:
      - apis
      - inventory

volumes:
  catalogdata:
  identitydata:
  basketdata:
  inventorydata:
  rabbitmqdata:
